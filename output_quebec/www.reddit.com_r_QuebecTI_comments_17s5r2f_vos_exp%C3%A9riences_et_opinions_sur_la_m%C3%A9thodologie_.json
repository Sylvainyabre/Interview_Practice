{
  "paragraphs": [
    "Communauté québécoise sur les TIs",
    "Salut,",
    "J'aimerais savoir les opinions et les expériences des gens de ce sub sur la méthodologie SAFe. Positif, négatif, neutre?",
    "Je vais me garder de donner mon opinion dans l'OP pour ne pas tainter la discussion...",
    "safe, agile, scrum... tous une bonne idée pour les développeurs en théorie. mais en pratique ce n'est jamais le cas. les gestionnaires, PO, PM, scrum masters, etc.. finissent toujours par planifier des rencontres pour planifier des rencontres afin de parler de rencontres au sujet de méthodologie... planif de PI, planif de sprint, pointage des tâches (parce que les PO sont pas capables de le faire), affinage du sprint, rétrospective de sprint, post-mortem de sprint.",
    "ça finit toujours qu'il y a plus de rencontres que de travail réalisé. le but de ces méthodes est de simplifier le processus de développement pour faciliter le processus de feedback et d'itération, mais au final ça fait tout le contraire. ce que j'hais le plus c'est que les gestionnaires comprennent pas que ces méthodes sont faites pour faciliter le réajustement et non le compliquer.. et après ça promet des livraisons sur des deadlines stricts sans tenir compte des fluctuations, ajustements ou feedback...",
    "la seule méthodologie que j'ai vu fonctionner à date, c'est le kanban.",
    "Perso, j'ai une très mauvaise opinion d'Agile, SCRUM, SAFe et toutes ces conneries de méthodologies. Dès qu'une compagnie de consultation s'approprie une méthodologie et la package et la vend sous forme de consultants et de formations, tu sais que c'est que du marketing pour impressionner les hauts gestionnaires.",
    "La réalité, c'est qu'être agile (avec un petit A), c'est tout le contraire d'adopter un processus rigide et castrant. Tu es censé adopter les processus et méthodes qui ont du sens pour ton équipe et ça devrait permettre aux développeurs de se concentrer sur ce qu'ils font de mieux: livrer de la valeur.",
    "Mon opinion va dans ce sens aussi.",
    "Déjà que l'implémentation des méthodes agiles sont souvent très mal fait, je trouve que c'est encore pire avec SAFe parce que le processus est déjà rigide à la base, intentionnellement.",
    "On finit avec ce qui revient à des sprints (appelés PI) de 3 mois, qu'on doit planifier en majorité. Pire, les périodes de revues et planifs à la fin des ces PI prennent autour de 2 jours et demi! Pour toutes les équipes et incluant tout le monde de ces équipes. C'est complètement fou.",
    "Bon, mon opinion personnelle est assez négative. Ça se veut agile, mais on finit par perdre toute flexibilité quant à l'organisation de notre travail.",
    "La raison pour laquelle j'ai crée ce thread c'est parce que je peux voir certains points positifs à cette méthodologie en théorie et je me demande si mon expérience est plus dû à la manière qu'elle a été implémentée ie on finit en \"train\" avec plein d'équipes avec des contextes très différents du nôtre, avec aucunes dépendances entre nous simplement pour donner une vue plus facile à nos execs.",
    "Après je comprends le besoin de visibilité pour les execs, mais on finit par être résumés à des KPIs trop génériques qui ne vont pas vraiment représenter fidèlement notre situation. On tombe finalement dans une espèce de danse à essayer de bien faire paraître ces métriques.",
    "Curieux que tu poses la question, on m'offre une formation prochainement là-dessus et je me posais la question si ça valait la peine.",
    "TDLR: Ça dépend...",
    "Malheureusement, par expérience je vais dire négatif car c'est souvent mal implémentée, ou pour les mauvaises raisons.",
    "",
    "Explication plus élaborée:",
    "Avant d'adopter n'importe quelle méthodologie, il faut toujours (idéalement/en théorie) se poser quelques questions tels comme:",
    "Quel est le but de ce changement?",
    "Qu'est-ce qu'on tente d'améliorer/accomplir?",
    "Quelles sont les alternatives qu'on a explorées et pourquoi on a choisi SAFe au final?",
    "Comment on sait si on va avoir un succès ou un échec?",
    "Etc...",
    "Ce n'est pas une liste exhaustive, mais l'idée c'est de chercher à comprendre le besoin réel qu'on chercher à combler en implémentant (de gré ou de force), cette méthodologie.",
    "Si la réponse ressemble à: \"Pour mieux gérer le projet selon les meilleures pratiques de l'industrie\"...pauvre toi :)",
    "Mais si c'est plus complet comme réponse et on couvre les pros et les cons, ex:",
    "On a comme objectif pour 2024 d'augmenter la qualité des livrables et diminuer la friction lors de l'élaboration des requis....",
    "On a observé la liste de lacunes suivantes [...].",
    "On a regardé les options sur la table et on croit que mettre en place les pratiques X, Y, Z qui viennent avec SAFe vont nous aider à pallier au lacunes A, B, C.",
    "On est conscient les problèmes X, Y, Z peuvent survenir suite à ce changement, mais avec la maturité de l'organisation et blablabla, on croit que l'on va en ressortir plus gagnant que perdant.",
    "Et bien sûr comme les contextes changent, ce n'est pas parce qu'une méthodologie faisait du sense à un moment donné pour un projet, une équipe ou une compagnie, qu'elle va en faire pour toujours.",
    "C'est du Waterfall déguisé",
    "Extrêmement négatif. C'est rien d'autre que du waterfall avec une petite couche de peinture, mais au final en arrière de SAFe ils ne reprennent rien du Framework agile.",
    "SAFe: Shitty Agile For Enterprise",
    "À fuir si tu penses que ça règle quelque chose.",
    "Ce qui est réalisé en logiciel suit intégralement la structure organisationnelle qui l'englobe. C'est un sommaire de la loi de Conway.",
    "Assure-toi que l'architecture logicielle est en phase avec l'organisation et le découpage des équipes de réalisation. Ensuite tu prends n'importe quelle méthodologie de reddition de comptes.",
    "Si scrum fait ton bonheur, ou encore kanban pour les perma-indécis, SAFe parce qu'il trop de seniors à occuper en management."
  ]
}